type Mutation {
  freelancerOnboardingPersonal(input: FreelancerOnboardingPersonal!): Boolean!
  freelancerOnboardingPortfolio(input: FreelancerOnboardingPortfolio!): Boolean!
  skipFreelancerOnboarding: Boolean!
}

type Freelancer {
  id: ID
  createdAt: DateTime
  updatedAt: DateTime
  asUser: User
  bio: String
  avatar: File
  website: String
  location: String
  timezone: String
  isPrivate: Boolean
  isForHire: Boolean
  socials: [Social!]
  skills: [String!]
  portfolio: [PortfolioProject!]
}

type PortfolioProject {
  id: ID
  title: String
  description: String
  url: String
  avatar: File
  images: [File]!
}

type Social {
  id: ID!
  type: SocialType
  url: String
}

enum SocialType {
  UPWORK
  GITHUB
  LINKEDIN
  TWITTER
}

enum FreelancerOnboardingStep {
  NOT_STARTED
  PERSONAL
  PORTFOLIO
  FINISHED
}


input FreelancerOnboardingPersonal {
  firstName: String
  lastName: String
  avatarFileId: String
  bio: String
  website: String
  location: String
  timezone: String
}

input ImageInput {
  id: ID!
}

input PortfolioInput {
  title: String!
  description: String!
  images: [ImageInput]!
  url: String
}

input SocialInput {
  type: SocialType!
  url: String!
}

input FreelancerOnboardingPortfolio {
  socials: [SocialInput!]!
  portfolio: [PortfolioInput!]!
  skills: [String!]!
}
