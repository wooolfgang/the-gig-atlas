type Query {
  gigs(
    where: GigWhereInput
    orderBy: GigOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Gig]!
  searchGigs(search: String!): [Gig]!
  gigsListLanding: [Gig]!
}

type Mutation {
  createGig(gig: GigInput!, employer: EmployerInput!): Gig
  deleteGig(id: ID): Gig
}

type Gig {
  id: ID
  createdAt: DateTime
  title: String
  description: String!
  tags: [Tag!]!
  projectType: ProjectType!
  paymentType: PaymentType!
  minFee: Float!
  maxFee: Float!
  jobType: JobType!
  locationRestriction: String
  employer: Employer!
  communicationType: GigCommunicationType!
  communicationEmail: String
  communicationWebsite: String
  p: Int # search priority, 1 - n
}

input GigInput {
  title: String!
  description: String!
  tags: [String]!
  projectType: ProjectType!
  paymentType: PaymentType!
  minFee: Float!
  maxFee: Float!
  jobType: JobType!
  locationRestriction: String
  communicationType: GigCommunicationType!
  communicationEmail: String
  communicationWebsite: String
}
