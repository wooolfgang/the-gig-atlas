type User {
  id: ID! @id
  firstName: String
  lastName: String
  email: String! @unique
  password: String!
  role: UserRole! @default(value: MEMBER)
  createdAt: DateTime! @createdAt
  
  asEmployer: Employer @unique @relation(name: "AsEmployer", link: INLINE, onDelete: CASCADE)
  asFreelancer: Freelancer @unique @relation(name: "AsFreelancer", link: INLINE, onDelete: CASCADE)
  
  isPrivate: Boolean @default(value: false)
  isEmailVerified: Boolean @default(value: false)
}

enum UserRole {
  ADMIN
  MEMBER
}

type Employer {
  id: ID! @id
  asUser: User @unique @relation(name: "AsEmployer")
  employerType: EmployerType!
  gigs: [Gig]! @relation(name: "GigsOfEmployer", onDelete: CASCADE)
  displayName: String!
  website: String!
  introduction: String!
  email: String!
  avatar: File!
}

enum EmployerType {
  PERSONAL
  COMPANY
}

type Freelancer {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  asUser: User @unique @relation(name: "AsFreelancer")
  bio: String
  website: String
  location: String
  timezone: String
  isForHire: Boolean @default(value: false)
  socials: [Social!] @scalarList(strategy: RELATION)
  skills: [String!] @scalarList(strategy: RELATION)
  portfolio: [PortfolioProject!]
}

type PortfolioProject {
  id: ID! @id
  title: String!
  description: String!
  website: String
  avatar: File @relation(name: "PortfolioAvatar")
  images: [File]! @relation(name: "PortfolioImages")
}

type Social {
  id: ID! @id
  type: SocialType!
  website: String!
}

enum SocialType {
  UPWORK
  GITHUB
  LINKEDIN
  TWITTER
}

enum GigCommunicationType {
  EMAIL
  WEBSITE
  IN_APP
}

type Gig {
  id: ID! @id
  title: String!
  description: String!
  technologies: [String!]! @scalarList(strategy: RELATION)
  projectType: ProjectType!
  paymentType: PaymentType!
  minFee: Float!
  maxFee: Float!
  jobType: JobType!
  locationRestriction: String
  employer: Employer! @relation(name: "GigsOfEmployer")
  createdAt: DateTime! @createdAt
  communicationType: GigCommunicationType! @default(value: EMAIL)
  communicationEmail: String
  communicationWebsite: String
}

enum JobType {
  FULL_TIME
  PART_TIME
  CONTRACT
}

enum PaymentType {
  HOURLY
  FIXED
} 

enum ProjectType {
  GREENFIELD
  MAINTENANCE
  CONSULTING
  TESTING
}

type File {
  id: ID! @id
  createdAt: DateTime! @createdAt 
  updatedAt: DateTime! @updatedAt
  name: String
  contentType: String
  url: String
}
